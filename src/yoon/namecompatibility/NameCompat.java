package yoon.namecompatibility;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class NameCompat {

	static NameCompat nc = new NameCompat();

	// 유니코드 상 인덱스에 해당하는 획순

	// ㄱ,ㄲ,ㄴ,ㄷ,ㄸ,ㄹ,ㅁ,ㅂ,ㅃ,ㅅ,ㅆ,ㅇ,ㅈ,ㅉ,ㅊ,ㅋ,ㅌ,ㅍ,ㅎ
	int choseongStroke[] = { 2, 4, 2, 3, 6, 5, 4, 4, 8, 2, 4, 1, 3, 6, 4, 3, 4, 4, 3 };
	// ㅏ,ㅐ,ㅑ,ㅒ,ㅓ,ㅔ,ㅕ,ㅖ,ㅗ,ㅘ,ㅙ,ㅚ,ㅛ,ㅜ,ㅝ,ㅞ,ㅟ,ㅠ,ㅡ,ㅢ,ㅣ
	int jungseongStroke[] = { 2, 3, 3, 4, 2, 3, 3, 4, 2, 4, 5, 3, 3, 2, 4, 5, 3, 3, 1, 2, 1 };
	// 없음,ㄱ,ㄲ,ㄳ,ㄴ,ㄵ,ㄶ,ㄷ,ㄹ,ㄺ,ㄻ,ㄼ,ㄽ,ㄾ,ㄿ,ㅀ,ㅁ,ㅂ,ㅄ,ㅅ,ㅆ,ㅇ,ㅈ,ㅊ,ㅋ,ㅌ,ㅍ,ㅎ
	int jongseongStroke[] = { 0, 2, 4, 4, 2, 5, 5, 3, 5, 7, 9, 9, 7, 9, 9, 8, 4, 4, 6, 2, 4, 1, 3, 4, 3, 4, 4, 3 };

	// 이름점 순서를 A X B Y C Z 라고 할 때 A + 6B + C 값으로 X + Y 를 도출

	int xpyMap[][] = { { 0, 5, 10, 15 }, { 3, 8, 13, 18 }, { 1, 6, 11, 16 }, { 4, 9, 14 }, { 2, 7, 12, 17 } };

	Map<Integer, char[]> lastNameList = new HashMap<>();
	Map<Integer, String[]> firstNameList = new HashMap<>();

	private void setProperty() {
		// 성 데이터
		lastNameList.put(2, new char[] { '이' });
		lastNameList.put(3, new char[] { '우', '기', '오', '어' });
		lastNameList.put(4, new char[] { '유', '고', '지', '은', '위', '노', '나', '인', '서', '구', '여', '소' });
		lastNameList.put(5, new char[] { '신', '송', '도', '옥', '안', '허', '조', '양', '성', '강', '공', '하', '주' });
		lastNameList.put(6, new char[] { '선', '육', '윤', '임', '진', '장', '차', '마', '모', '홍', '국', '손', '연', '추', '정', '왕',
				'제', '석' });
		lastNameList.put(7, new char[] { '김', '전', '엄', '채', '금', '방', '심', '배', '원', '최', '한', '민', '표', '라' });
		lastNameList.put(8, new char[] { '탁', '현', '명', '남', '황', '권', '박', '문', '류', '길', '반', '맹', '천', '염', '곽' });
		lastNameList.put(9, new char[] { '변', '백', '설', '함', '편' });
		// 이름 데이터
		firstNameList.put(204, new String[] { "이서", "이은", "이지", "이수", "이나" });
		firstNameList.put(205, new String[] { "이주", "이도", "이안" });
		firstNameList.put(206, new String[] { "이삭", "이든", "이건", "이진", "이정" });
		firstNameList.put(207, new String[] { "이한", "이준" });
		firstNameList.put(208, new String[] { "이찬", "이슬", "이린", "이랑", "이현", "이레" });
		firstNameList.put(209, new String[] { "이담", "이솔", "이설", "이환", "이엘" });
		firstNameList.put(211, new String[] { "이룸" });
		firstNameList.put(303, new String[] { "시아", "시우" });
		firstNameList.put(304, new String[] { "아은", "아인", "시유", "시은" });
		firstNameList.put(305,
				new String[] { "시운", "시호", "시언", "시하", "아영", "우영", "아미", "시후", "시온", "우주", "시안", "우성", "기주", "시영" });
		firstNameList.put(306, new String[] { "기윤", "우재", "우리", "어진", "아정", "우진", "시연", "시윤", "시진", "아리", "의진", "아연",
				"우석", "우경", "아윤", "아진", "우정" });
		firstNameList.put(307, new String[] { "우빈", "아라", "아민", "시형", "아준", "기준", "시헌", "우준", "시원", "기훈", "시완", "의준",
				"우민", "아원", "기원", "기태", "기민", "시준", "아빈", "우형" });
		firstNameList.put(308,
				new String[] { "기현", "우찬", "시찬", "우혁", "기찬", "우현", "의찬", "그린", "시현", "의현", "아린", "아랑", "아현", "시혁" });
		firstNameList.put(309, new String[] { "시율", "시환", "아론", "아란", "우솔", "아율", "기환" });
		firstNameList.put(310, new String[] { "아림", "기범", "우림", "아름" });
		firstNameList.put(311, new String[] { "아람" });
		firstNameList.put(313, new String[] { "기쁨" });
		firstNameList.put(402, new String[] { "소이", "서이", "유이", "지이" });
		firstNameList.put(403, new String[] { "인우", "은우", "은기", "지우", "서우", "승우", "승기", "서아", "유니", "승아", "수오", "수아",
				"인아", "노아", "은아", "유아", "지오", "지아" });
		firstNameList.put(404,
				new String[] { "은수", "지수", "유승", "지나", "서인", "은서", "지서", "소유", "여은", "수애", "가은", "나나", "은지", "지은", "지웅",
						"서유", "승유", "지승", "유나", "지인", "승수", "소은", "가인", "수지", "수은", "인애", "고은", "수인", "은유", "인수", "유은",
						"유지", "지유", "지애", "인서", "서은", "나은", "승은", "승지" });
		firstNameList.put(405,
				new String[] { "승욱", "유호", "은하", "승운", "서호", "은규", "나온", "승호", "승언", "은교", "유성", "지안", "인영", "가영", "서온",
						"지상", "은상", "은후", "은비", "지후", "유하", "은미", "인성", "서하", "은주", "승하", "수안", "은조", "서후", "유안", "소운",
						"승후", "서안", "은희", "지희", "수호", "유비", "가온", "유미", "고운", "나희", "유근", "유주", "승미", "서희", "승희", "수희",
						"지예", "인후", "유희", "소하", "인호", "유신", "지영", "수하", "은영", "승규", "은호", "은세", "지호", "지언", "소예", "지성",
						"지욱", "수예", "은성", "지운", "소영", "지용", "지온", "수영", "소미", "인하", "소희", "수미", "서주", "가희", "은송", "유영",
						"승주", "인규", "서영", "나영" });
		firstNameList.put(406,
				new String[] { "소윤", "나리", "유경", "승재", "승리", "서윤", "소정", "승윤", "지홍", "유리", "수윤", "지음", "승효", "유선", "나윤",
						"은진", "소진", "가경", "지연", "지해", "서진", "가윤", "여정", "승진", "나경", "수진", "소리", "서경", "유진", "수경", "누리",
						"수연", "여진", "승건", "지석", "은제", "은석", "유연", "여경", "유건", "서연", "은정", "나연", "승연", "애리", "인경", "서정",
						"서휘", "유석", "가연", "수정", "은경", "나정", "유정", "은효", "지효", "은재", "은선", "지선", "소연", "지윤" });
		firstNameList.put(407,
				new String[] { "지한", "소혜", "지원", "여준", "인준", "지훈", "지빈", "나혜", "지헌", "서혜", "승혜", "은채", "지완", "소을", "유한",
						"소빈", "은민", "수화", "지민", "수빈", "유원", "승헌", "서원", "유화", "나원", "승원", "유빈", "승완", "서빈", "서훈", "수완",
						"승빈", "승훈", "인혜", "유민", "은혜", "유라", "여빈", "은총", "지혜", "가원", "사라", "소망", "지형", "요한", "가을", "은준",
						"서한", "노을", "승한", "수한", "소원", "가빈", "서형", "소민", "소라", "가민", "나라", "유준", "승민", "서준", "수민", "여원",
						"지향", "승준" });
		firstNameList.put(408,
				new String[] { "수린", "서찬", "애린", "유린", "승찬", "수찬", "서린", "나린", "인혁", "가현", "유찬", "여울", "나래", "지혁", "은혁",
						"지현", "소현", "소명", "가린", "인찬", "서현", "승혁", "수혁", "승현", "수현", "은찬", "지섭", "소울", "지찬", "나현", "유현",
						"승엽", "소린", "서혁", "사랑" });
		firstNameList.put(409, new String[] { "유겸", "지환", "은빛", "소율", "서령", "나율", "유담", "은솔", "지솔", "서율", "나엘", "수환",
				"유환", "서환", "승환", "유솔", "가령", "요셉", "은율", "소담", "지율", "나겸", "나령", "유란", "은설", "가율" });
		firstNameList.put(410, new String[] { "여름", "나림", "승범", "유림", "은결", "서림", "수련", "가림", "수림", "지범" });
		firstNameList.put(411, new String[] { "가람" });
		firstNameList.put(412, new String[] { "은별" });
		firstNameList.put(502, new String[] { "주이", "세이", "도이", "하이", "송이", "조이" });
		firstNameList.put(503, new String[] { "근우", "치우", "성우", "신우", "하니", "성아", "강우", "미우", "주아", "세아", "도아", "상우",
				"영우", "도우", "상아", "영아", "송아", "규아", "희우", "용우" });
		firstNameList.put(504,
				new String[] { "다인", "미소", "상은", "예나", "예서", "영인", "세은", "세웅", "강인", "예소", "성수", "예은", "예지", "다나", "영서",
						"송은", "자은", "예승", "규나", "희서", "다유", "영수", "미서", "희수", "희나", "성은", "미나", "강유", "영은", "영지", "안나",
						"새나", "조은", "다은", "하늬", "희은", "희지", "하유", "희승", "세인", "하나", "주은", "미지", "온유", "교은", "예인", "도은",
						"다애", "자인", "규은", "하은", "세나", "하승", "영웅" });
		firstNameList.put(505,
				new String[] { "예송", "도하", "다미", "영주", "규희", "상욱", "규미", "희주", "다영", "상호", "희영", "근영", "미주", "예강", "주예",
						"도후", "세호", "주영", "다희", "미영", "주호", "주언", "근호", "도영", "성후", "주성", "세희", "비주", "예성", "다예", "하영",
						"주용", "용호", "성욱", "예온", "세하", "신영", "성운", "상후", "성호", "규성", "조안", "하성", "성희", "주하", "다운", "영욱",
						"예하", "규호", "하온", "영호", "송하", "세영", "다온", "도예", "호영", "성규", "상희", "주안", "강호", "용하", "예안", "세미",
						"강후", "희성", "성하", "예영", "강희", "도언", "호성", "주미", "도운", "세온", "주희", "자영", "예주", "성주", "송희", "영후",
						"신후", "예희", "신비", "규비" });
		firstNameList.put(506,
				new String[] { "예선", "규연", "하연", "성재", "예윤", "다해", "미정", "성윤", "자윤", "성모", "희건", "세진", "예정", "호진", "도진",
						"다연", "상윤", "세경", "희연", "세연", "호연", "희윤", "용진", "영석", "예진", "도건", "다정", "하정", "영선", "주리", "성진",
						"예경", "강산", "희선", "주윤", "하얀", "희정", "성경", "하임", "도연", "강윤", "상진", "용재", "예리", "미선", "희진", "규리",
						"세정", "성연", "호정", "희경", "하리", "다경", "하선", "미경", "영재", "세종", "하윤", "다윤", "상연", "희재", "미진", "예음",
						"미르", "세리", "주연", "하음", "호재", "도경", "미연", "세윤", "예건", "도윤", "하진", "호윤", "다진", "송연", "자연", "영진",
						"규진", "하경" });
		firstNameList.put(507, new String[] { "주형", "세원", "호원", "영민", "세화", "영준", "세훈", "세빈", "도균", "하루", "호빈", "세헌",
				"희준", "다민", "도한", "도훈", "강민", "도빈", "규태", "도완", "도원", "다흰", "도헌", "강준", "신혜", "성원", "용훈", "용빈", "영광",
				"도준", "다혜", "성빈", "성훈", "하준", "상헌", "규민", "상원", "주혜", "하민", "하라", "상훈", "상빈", "상민", "강빈", "강훈", "상준",
				"도형", "주헌", "예한", "주원", "도혜", "세준", "예원", "주완", "호준", "주빈", "주훈", "예훈", "예빈", "세민", "세라", "호민", "예준",
				"규원", "하원", "하빈", "용민", "용준", "다훈", "다빈", "성민", "성준", "주한", "규빈", "다원", "영채", "희원", "영훈", "영빈" });
		firstNameList.put(508,
				new String[] { "규린", "하린", "성찬", "상엽", "예솜", "주현", "세혁", "예랑", "영찬", "세현", "도현", "호현", "하늘", "강현", "희찬",
						"송현", "미현", "주혁", "다슬", "다올", "세린", "두현", "하랑", "용현", "예현", "성혁", "예본", "주찬", "성현", "도혁", "세찬",
						"호찬", "다솜", "도엽", "예린", "다현", "하현", "미래", "상혁", "하울", "상현", "영현", "용찬", "예찬", "예슬", "규현" });
		firstNameList.put(509,
				new String[] { "새론", "도환", "다겸", "예설", "주환", "하담", "예환", "하율", "성율", "다율", "예솔", "세령", "하엘", "상율", "도겸",
						"다엘", "샤론", "도담", "다솔", "하솔", "세율", "규환", "예령", "영환", "도율", "예담", "세환", "예율", "하겸", "하령" });
		firstNameList.put(510, new String[] { "새봄", "예봄", "규림", "성범", "예림", "세림", "규범", "하림" });
		firstNameList.put(511, new String[] { "예람", "새롬", "하람" });
		firstNameList.put(512, new String[] { "새별" });
		firstNameList.put(514, new String[] { "예닮" });
		firstNameList.put(602, new String[] { "재이", "제이", "초이", "윤이", "진이" });
		firstNameList.put(603,
				new String[] { "재아", "보아", "선우", "연아", "제우", "리아", "종우", "효우", "리우", "윤우", "윤기", "정아", "연우", "윤오", "진아",
						"재우", "동우", "정우", "초아", "건우", "석우", "리오", "제아", "경아", "장우", "제니", "진우", "윤아", "진오", "선아" });
		firstNameList.put(604,
				new String[] { "진서", "재웅", "효은", "건웅", "윤지", "진유", "제인", "연지", "효인", "재은", "진수", "동은", "정은", "재인", "재승",
						"해은", "리사", "선유", "진웅", "정인", "보은", "해인", "윤서", "초은", "리유", "제나", "재서", "동인", "경서", "윤수", "재유",
						"경수", "효서", "연수", "보나", "연서", "재나", "경은", "정수", "리나", "선웅", "해나", "정서" });
		firstNameList.put(605, new String[] { "선호", "재후", "진규", "휘성", "윤상", "동하", "리안", "윤호", "진하", "경호", "해주", "효성",
				"보미", "연주", "윤성", "재호", "대영", "건영", "진후", "보영", "리호", "정미", "석영", "재성", "재욱", "동후", "선하", "진주", "진영",
				"선규", "정욱", "동희", "제하", "정운", "해성", "대성", "건욱", "보성", "윤하", "대호", "해온", "진희", "재하", "동규", "윤후", "윤비",
				"리하", "선후", "윤주", "선미", "효영", "선주", "건후", "윤영", "바다", "제희", "종호", "정안", "리예", "연후", "윤미", "재영", "효주",
				"경미", "연호", "윤희", "건호", "선희", "동주", "동근", "정후", "재희", "연성", "정호", "경희", "동영", "연희", "재용", "석주", "동호",
				"무성", "종하", "리온", "건희", "진호", "동욱", "정희", "연하", "건하", "진욱", "진성", "연두", "선영", "대희", "정하", "초희" });
		firstNameList.put(606,
				new String[] { "재진", "윤경", "선경", "초윤", "효진", "무진", "재경", "효경", "윤재", "제윤", "선재", "동진", "효재", "경모", "무경",
						"효리", "동연", "해리", "연재", "종윤", "보윤", "해윤", "부경", "대경", "동건", "동해", "정재", "보리", "건휘", "대윤", "경진",
						"연제", "정윤", "재홍", "윤진", "연정", "진석", "윤건", "동휘", "해진", "연진", "정음", "효연", "연경", "정진", "재연", "보경",
						"석진", "재윤", "윤제", "진경", "윤석", "정연", "대건", "효선", "윤선", "동재", "대연", "해연", "재석", "윤정", "보연", "리윤",
						"초연", "마리", "재휘", "효정", "동윤", "진모" });
		firstNameList.put(607,
				new String[] { "재완", "동원", "무빈", "재빈", "재훈", "동헌", "연준", "동화", "종민", "정준", "해민", "진원", "해준", "동훈", "동빈",
						"석준", "건민", "동완", "정민", "보민", "보라", "경원", "리한", "경태", "보배", "선화", "제원", "선빈", "동균", "효원", "리원",
						"건형", "제훈", "마루", "윤채", "재헌", "효빈", "재원", "윤빈", "경훈", "경빈", "윤민", "정원", "효준", "보빈", "윤준", "선민",
						"대원", "해원", "재민", "진형", "홍준", "정훈", "경민", "대한", "정빈", "석원", "재준", "효민", "정헌", "해빈", "동준", "초원",
						"석훈", "석빈", "장원", "동민", "대훈", "윤혜", "선혜", "석민", "윤형", "재형", "종원", "휘준", "경준", "선준", "제민", "종훈",
						"연화", "정한" });
		firstNameList.put(608,
				new String[] { "재현", "종혁", "윤혁", "종현", "보현", "해랑", "중현", "재혁", "휘찬", "리현", "윤찬", "윤슬", "대현", "동엽", "효린",
						"정혁", "정현", "진현", "경찬", "재린", "동현", "동혁", "효찬", "석현", "해찬", "해슬", "진혁", "동찬", "장현", "해린", "정찬",
						"제현", "경현" });
		firstNameList.put(609, new String[] { "건율", "재율", "윤솔", "동환", "진솔", "윤환", "윤겸", "진환", "경환", "대환", "해율", "선율",
				"보겸", "재겸", "재환", "경록", "효담", "윤설", "동율", "정환", "해솔", "해담", "진율" });
		firstNameList.put(610, new String[] { "재범", "해림", "푸름", "효림" });
		firstNameList.put(611, new String[] { "보람" });
		firstNameList.put(702, new String[] { "태이", "채이", "루이", "준이", "로이" });
		firstNameList.put(703, new String[] { "형우", "민우", "민기", "준우", "준기", "창우", "단아", "루아", "태우", "태오", "한아", "채우",
				"원우", "채아", "준오", "준아", "단우", "민아", "로아" });
		firstNameList.put(704,
				new String[] { "준수", "준서", "채유", "태인", "혜인", "민소", "혜승", "민수", "라은", "민지", "한서", "태서", "혜서", "태유", "채은",
						"태수", "한나", "혜나", "혜수", "민구", "루나", "민승", "채인", "태웅", "민유", "로은", "민서", "태은", "혜은", "혜지" });
		firstNameList.put(705,
				new String[] { "원희", "로희", "루미", "태희", "한희", "채하", "혜성", "민영", "단희", "루희", "원규", "혜온", "민근", "민주", "준영",
						"태규", "형주", "채안", "태강", "준호", "민성", "민욱", "채영", "준성", "원영", "금비", "민호", "태양", "준용", "채희", "민송",
						"화영", "라온", "태주", "민용", "태영", "준하", "태운", "민교", "준식", "준규", "태호", "혜미", "단비", "민하", "루비", "로운",
						"태성", "태욱", "한성", "민상", "창희", "태용", "준상", "준후", "민후", "태하", "단하", "라희", "민희", "루하", "채운", "로하",
						"루다", "채호", "채언", "원호", "태후", "한비", "준희", "민식", "민규", "혜주", "혜영" });
		firstNameList.put(706,
				new String[] { "태건", "준휘", "준석", "원재", "채정", "혜리", "태리", "태연", "태산", "로건", "민정", "혜연", "태윤", "혜윤", "루리",
						"형진", "원석", "민경", "민종", "라임", "혜선", "민진", "채경", "라연", "혜정", "민국", "민재", "벼리", "원진", "민건", "준모",
						"채리", "태진", "형석", "혜진", "민선", "준재", "채연", "민석", "민제", "태경", "채윤", "혜경", "라윤" });
		firstNameList.put(707,
				new String[] { "라원", "준표", "준한", "창민", "준원", "준형", "민형", "형준", "민준", "채원", "채완", "태한", "채훈", "태균", "형민",
						"채빈", "광민", "민채", "원빈", "채민", "태형", "준민", "채준", "원준", "태헌", "태원", "혜원", "태완", "민균", "태훈", "한빈",
						"태빈", "혜빈", "민혜", "루빈", "태민", "창준", "혜민", "로빈", "태준", "한준", "혜준" });
		firstNameList.put(708, new String[] { "준엽", "원찬", "한울", "민섭", "광현", "민찬", "민권", "민슬", "원혁", "한슬", "혜린", "태린",
				"태랑", "태현", "민혁", "준섭", "채린", "준혁", "채현", "준명", "준현", "창현", "태혁", "라현" });
		firstNameList.put(709, new String[] { "준환", "한솔", "혜담", "혜솔", "태겸", "한빛", "태환", "한겸", "혜령", "라엘", "민겸", "민환",
				"채령", "채환", "민솔", "태율", "한율", "혜율", "라율", "민율", "채율", "민설" });
		firstNameList.put(710, new String[] { "채림", "민결", "태림", "혜림", "준범", "한결", "민범" });
		firstNameList.put(711, new String[] { "민철" });
		firstNameList.put(712, new String[] { "샛별", "한별" });
		firstNameList.put(802, new String[] { "현이" });
		firstNameList.put(803, new String[] { "슬아", "린아", "관우", "현우", "현기", "현오", "현아", "레아", "래아", "슬우", "슬기", "찬우" });
		firstNameList.put(804,
				new String[] { "찬웅", "명서", "현서", "현지", "레나", "찬서", "려은", "명지", "찬유", "현수", "현승", "현웅", "래은" });
		firstNameList.put(805, new String[] { "슬비", "명주", "혁주", "현규", "현주", "현식", "현영", "찬규", "찬영", "현호", "현희", "찬호",
				"찬미", "현성", "현욱", "찬희", "현도", "현후", "현비", "찬욱", "린하" });
		firstNameList.put(806, new String[] { "현제", "현석", "현경", "현선", "명진", "현정", "현동", "명재", "현재", "찬휘", "현중", "혁진",
				"현진", "믿음", "현종" });
		firstNameList.put(807, new String[] { "병훈", "현민", "현태", "혁준", "찬빈", "현준", "찬민", "명준", "래원", "찬형", "명훈", "병준",
				"현채", "려원", "현빈" });
		firstNameList.put(808, new String[] { "현찬", "현섭", "병현", "슬찬", "찬혁", "병찬" });
		firstNameList.put(809, new String[] { "찬솔", "찬율", "현율" });
		firstNameList.put(902, new String[] { "율이", "담이", "솔이" });
		firstNameList.put(903, new String[] { "율아", "설아", "솔아" });
		firstNameList.put(904, new String[] { "솔지", "빛나" });
		firstNameList.put(905, new String[] { "설희", "솔희", "담비", "율하", "솔비", "랭킹", "설하", "율희", "솔미", "환희", "담희" });
		firstNameList.put(906, new String[] { "설리", "율리", "엘리" });
		firstNameList.put(907, new String[] { "솔민", "설화", "솔빈" });
		firstNameList.put(908, new String[] { "설린", "설현" });
		firstNameList.put(1002, new String[] { "봄이" });
		firstNameList.put(1004, new String[] { "범수", "범서" });
		firstNameList.put(1005, new String[] { "범규" });
		firstNameList.put(1006, new String[] { "범진", "범석" });
		firstNameList.put(1007, new String[] { "범준" });
		firstNameList.put(1010, new String[] { "필립" });
		firstNameList.put(1205, new String[] { "별하" });
	}

	public int convertCharToStoke(char c) {
		int uniVal;
		int stroke = 0;
		uniVal = c - 0xAC00;
		// 순서대로 초성, 중성, 종성
		stroke += choseongStroke[uniVal / 588];
		stroke += jungseongStroke[uniVal / 28 % 21];
		stroke += jongseongStroke[uniVal % 28];
		return stroke;
	}

	private int[] convertNameToStroke(String name) {
		int arr[] = new int[3];
		for (int i = 0; i < name.length(); i++) {
			arr[i] = convertCharToStoke(name.charAt(i));
		}
		return arr;
	}

	private int[][] getBestStroke(int[] stroke) {
		int xpyList[] = xpyMap[(9 - (stroke[0] + 6 * stroke[1] + stroke[2]) % 10) / 2];
		int count = 0;
		for (int xpy : xpyList) {
			if (xpy > 9)
				count += 19 - xpy;
			else
				count += xpy + 1;
		}
		int strokeList[][] = new int[count][3];
		int index = 0;
		int tmp;
		for (int xpy : xpyList) {
			for (int i = 0; i <= 9; i++) {
				tmp = xpy - i;
				if (tmp <= 9 && tmp >= 0) {
					strokeList[index][0] = i;
					strokeList[index][1] = tmp;
					strokeList[index][2] = 9 - (4 * (stroke[1] + stroke[2]) + i + 6 * tmp) % 10;
					index++;
				}
			}
		}
		/*for (int i = 0; i < strokeList.length; i++) {
			System.out.printf("%d %d %d\n", strokeList[i][0], strokeList[i][1], strokeList[i][2]);
		}*/
		return strokeList;
	}

	public void printAllPartners(String name) {
		int inputStroke[] = convertNameToStroke(name);
		int partnerStroke[][] = getBestStroke(inputStroke);
		// 이름조합
		int count = 0;
		for (int[] stroke : partnerStroke) {
			int nameStroke = stroke[1] * 100 + stroke[2];
			if (lastNameList.get(stroke[0]) == null)
				continue;
			for (char lastName : lastNameList.get(stroke[0])) {
				if (firstNameList.get(nameStroke) == null)
					continue;
				for (String firstName : firstNameList.get(nameStroke)) {
					System.out.println(lastName + firstName);
					count++;
				}
			}
		}
		System.out.println(count);
	}

	public void printRandomPartners(String name, int n) {
		int inputStroke[] = convertNameToStroke(name);
		int partnerStroke[][] = getBestStroke(inputStroke);
		// 이름조합
		Set<String> nameList = new HashSet<>();
		int index = 0;
		boolean isValid = true;
		;
		String fullname;
		for (int i = 0; i < n; i++) {
			int[] stroke = partnerStroke[(int) (partnerStroke.length * Math.random())];
			int nameStroke = stroke[1] * 100 + stroke[2];
			if (lastNameList.get(stroke[0]) == null)
			{
				i--;
				continue;
			}
			char[] lastNames = lastNameList.get(stroke[0]);
			char lastName = lastNames[(int) (lastNames.length * Math.random())];
			if (firstNameList.get(nameStroke) == null)
			{
				i--;
				continue;
			}
			String[] firstNames = firstNameList.get(nameStroke);
			String firstName = firstNames[(int) (firstNames.length * Math.random())];
			fullname = lastName + firstName;
			for (String printedName : nameList) {
				if (printedName.equals(fullname)) {
					isValid = false;
					i--;
					break;
				}
			}
			if (isValid)
				System.out.println(fullname);
			isValid = true;
		}
	}

	public static void main(String[] args) {
		nc.setProperty();
		Scanner scan = new Scanner(System.in);
		String name = scan.nextLine();
		// nc.printAllPartners(name);
		nc.printRandomPartners(name, 10);
	}

}